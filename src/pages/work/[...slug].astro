---
import { CollectionEntry, getCollection } from 'astro:content';

import BaseLayout from '../../layouts/BaseLayout.astro';

import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';

interface Props {
	entry: CollectionEntry<'work'>;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
	const work = await getCollection('work');
	return work.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
	<main>
		<div class="instructions">
			<div class="arrows">
				<a class="back-link" href="/work/"><Icon icon="arrow-left" /> Предыдущая статья</a>
				<a class="forward-link" href="/work/">Следующая статья <Icon icon="arrow-right" /></a>
			</div>
			
			<Hero title={entry.data.title} align="start">
				<div class="details">
					<p class="description">{entry.data.description}</p>
				</div>
			</Hero>	
			<div class="content">
				<Content />
			</div>	
		</div>

		<p class="instructions">
			2023 MSHK GAMES
		</p>
	</main>
	
</BaseLayout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 90ch !important;
	}
	.arrows {
		display: inline;
	}
	.instructions {
		line-height: 1.6;
		margin: 0.5rem 0;
		border: 3px solid #cfe0fc !important;
		background-image: linear-gradient(-30deg,  #cfe0fc, #ffffff) !important;
		padding: 2rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 1em;
		font-weight: bold;
		color: #091d35 !important;
		border-radius: 4px;
		padding: 0.8em 0.8em;
	}
	.instructions strong {
		color: #091d35 !important;
	}
	p {
		font-weight: 500 !important;
		font-size: 1.2rem !important;
		color: #091d35 !important;
	}

	.back-link {
		display: none;
	}

	.forward-link {
		display: none;
	}

	.description {
		font-size: var(--text-lg);
		max-width: 54ch;
	}

	.content {
		max-width: 65ch;
		margin-inline: auto;
	}

	.content > :global(* + *) {
		margin-top: 1rem;
	}

	.content :global(h1),
	.content :global(h2),
	.content :global(h3),
	.content :global(h4),
	.content :global(h5) {
		margin: 1.5rem 0;
	}


	.content :global(img) {
		border-radius: 1.5rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-family: var(--font-brand);
		font-weight: 600;
		line-height: 1.1;
		padding-inline-start: 1.5rem;
		border-inline-start: 0.25rem solid var(--accent-dark);
		color: var(--gray-0);
	}

	.back-link,
	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}

	.back-link:hover,
	.back-link:focus,
	.forward-link:hover,
	.forward-link:focus,
	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

	@media (min-width: 50em) {
		.back-link {
			display: block;
			align-self: flex-start;
		}

		.details {
			flex-direction: row;
			gap: 2.5rem;
		}

		.content :global(blockquote) {
			font-size: var(--text-2xl);
		}
	}
</style>
